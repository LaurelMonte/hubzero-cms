<?php

  // include base peer class
  require_once 'lib/data/om/BaseSimilitudeLawPeer.php';

  // include object class
  include_once 'lib/data/SimilitudeLaw.php';


/**
 * Skeleton subclass for performing query and update operations on the 'SimilitudeLaw' table.
 *
 *
 *
 * This class was autogenerated by Propel on:
 *
 * Sat Feb  9 00:03:10 2008
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.data
 */
class SimilitudeLawPeer extends BaseSimilitudeLawPeer {

  /**
   * Find a SimilitudeLaw object based on its ID
   *
   * @param int $id
   * @return SimilitudeLaw
   */
  public static function find($id) {
    return self::retrieveByPK($id);
  }


  /**
   * Find all SimilitudeLaws
   *
   * @return array <SimilitudeLaw>
   */
  public static function findAll() {
    return self::doSelect(new Criteria());
  }

  public static function getKeywordSearchColumns() {
	  return array();
  }

  //case "findByDependence":
  //return new Finder($finderName, "SELECT * FROM SimilitudeLaw WHERE SimilitudeLawGroup_id = ? AND dependence=?");
  public static function findByDependence($similitudeLawGroup_id, $dependence) {
    $c = new Criteria();
    $c->add(self::SIMILITUDE_LAWGROUP_ID, $similitudeLawGroup_id);
    $c->add(self::DEPENDENCE, $dependence);

    return self::doSelect($c);
  }


  //case "findByGroup":
  //return new Finder($finderName, "SELECT * FROM SimilitudeLaw WHERE SimilitudeLawGroup_id = ?");
  public static function findByGroup($similitudeLawGroup_id) {
    $c = new Criteria();
    $c->add(self::SIMILITUDE_LAW_GROUP_ID, $similitudeLawGroup_id);

    return self::doSelect($c);
  }


  //case "findBySysName":
  //return new Finder($finderName, "SELECT * FROM SimilitudeLaw WHERE system_name = ?");
  public static function findBySysName($system_name) {
    $c = new Criteria();
    $c->add(self::SYSTEM_NAME, $system_name);

    return self::doSelect($c);
  }
} // SimilitudeLawPeer
?>
