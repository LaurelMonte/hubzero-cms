<?php

  // include base peer class
  require_once 'lib/data/om/BaseEntityTypePeer.php';

  // include object class
  include_once 'lib/data/EntityType.php';


/**
 * Skeleton subclass for performing query and update operations on the 'EntityType' table.
 *
 *
 *
 * This class was autogenerated by Propel on:
 *
 * Sat Feb  9 00:02:53 2008
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.data
 */
class EntityTypePeer extends BaseEntityTypePeer {

  /**
   * Find an EntityType object based on its ID
   *
   * @param int $id
   * @return EntityType
   */
  public static function find($id) {
    return self::retrieveByPK($id);
  }


  /**
   * Find all EntityTypes
   *
   * @return array <EntityType>
   */
  public static function findAll() {
    return self::doSelect(new Criteria());
  }

  /**
   *
   * @param string $p_strUsageType
   * @return array <EntityType>
   */
  public static function findUsageType($p_strUsageType){
    $p_strUsageType .= "%";

    $oCriteria = new Criteria();
    $oCriteria->add(self::N_TABLE_NAME, $p_strUsageType, Criteria::LIKE);
    return self::doSelect($oCriteria);
  }

  /**
   *
   * @param array $p_strUsageTypeArray
   * @return array
   */
  public static function findUsageTypeList($p_strUsageTypeArray){
    $oCriteria = new Criteria();
    $oCriteria->add(self::N_TABLE_NAME, $p_strUsageTypeArray, Criteria::IN);
    return self::doSelect($oCriteria);
  }

  /**
   *
   * @param string $p_strUsageType
   * @return EntityType
   */
  public static function findByTableName($p_strUsageType){
    $oCriteria = new Criteria();
    $oCriteria->add(self::N_TABLE_NAME, $p_strUsageType);
    return self::doSelectOne($oCriteria);
  }


} // EntityTypePeer
?>
