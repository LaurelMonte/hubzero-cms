<?php

  // include base peer class
  require_once 'lib/data/om/BaseEquipmentAttributeClassPeer.php';

  // include object class
  include_once 'lib/data/EquipmentAttributeClass.php';


/**
 * Skeleton subclass for performing query and update operations on the 'EquipmentAttributeClass' table.
 *
 *
 *
 * This class was autogenerated by Propel on:
 *
 * Sat Feb  9 00:02:55 2008
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.data
 */
class EquipmentAttributeClassPeer extends BaseEquipmentAttributeClassPeer {

  /**
   * Find a EquipmentAttributeClass object based on its ID
   *
   * @param int $id
   * @return EquipmentAttributeClass
   */
  public static function find($id) {
    return self::retrieveByPK($id);
  }


  /**
   * Find all EquipmentAttributeClasses
   *
   * @return array <EquipmentAttributeClass>
   */
  public static function findAll() {
    return self::doSelect(new Criteria());
  }


  //case "findByEquipmentClass":
  //return new Finder($finderName, "SELECT * FROM Equipment_Attribute_Class WHERE equipment_Class_Id=?");
  public static function findByEquipmentClass($equipmentClassId) {
    $c = new Criteria();
    $c->add(self::EQUIPMENT_CLASS_ID, $equipmentClassId);

    return self::doSelect($c);
  }


  //case "findByAttribute":
  //return new Finder($finderName, "SELECT * FROM Equipment_Attribute_Class WHERE equipment_Attribute_Id=?");
  public static function findByAttribute($equipmentAttributeId) {
    $c = new Criteria();
    $c->add(self::EQUIPMENT_ATTRIBUTE_ID, $equipmentAttributeId);

    return self::doSelect($c);
  }


  //case "findByAttributeClass":
  //return new Finder($finderName, "SELECT * FROM Equipment_Attribute_Class WHERE equipment_Attribute_Id=? AND equipment_Class_Id=?");
  public static function findByAttributeClass($equipmentAttributeId) {
    $c = new Criteria();
    $c->add(self::EQUIPMENT_ATTRIBUTE_ID, $equipmentAttributeId);
    $c->add(self::EQUIPMENT_CLASS_ID, $equipmentClassId);

    return self::doSelect($c);
  }


} // EquipmentAttributeClassPeer
?>
