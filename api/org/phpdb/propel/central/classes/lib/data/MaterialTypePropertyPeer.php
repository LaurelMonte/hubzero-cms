<?php

  // include base peer class
  require_once 'lib/data/om/BaseMaterialTypePropertyPeer.php';

  // include object class
  include_once 'lib/data/MaterialTypeProperty.php';


/**
 * Skeleton subclass for performing query and update operations on the 'MaterialTypeProperty' table.
 *
 *
 *
 * This class was autogenerated by Propel on:
 *
 * Sat Feb  9 00:03:02 2008
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.data
 */
class MaterialTypePropertyPeer extends BaseMaterialTypePropertyPeer {

  /**
   * Find a MaterialType object based on its ID
   *
   * @param int $id
   * @return MaterialTypeProperty
   */
  public static function find($id) {
    $ret =  self::retrieveByPK($id);

    if($ret && $ret->getStatus() == 1) {
      return $ret;
    }
    return null;
  }


  /**
   * Find All MaterialTypeProperties
   *
   * @return array <MaterialTypeProperty>
   */
  public static function findAll() {
    return self::doSelect(new Criteria());
  }


  /**
   * Find MaterialTypeProperty by MaterialType
   *
   * @param int $materialType_id: MaterialType Id
   * @return array <MaterialTypeProperty>
   */
  public static function findByMaterialType($materialType_id) {
    $c = new Criteria();
    $c->add(self::MATERIAL_TYPE_ID, $materialType_id);
    $c->add(self::STATUS, 0, Criteria::GREATER_THAN);
    $c->addAscendingOrderByColumn(self::ID);

    return self::doSelect($c);
  }
  
  /**
   * Find MaterialTypeProperty by MaterialType's display name 
   *
   * @param int $materialType_id: MaterialType Id
   * @return array <MaterialTypeProperty>
   */
  public static function findByMaterialTypePropertyDisplayName($p_strDisplayName) {
    $c = new Criteria();
    $c->add(self::DISPLAY_NAME, $p_strDisplayName ."%", Criteria::LIKE);
    $c->add(self::STATUS, 0, Criteria::GREATER_THAN);
    $c->setIgnoreCase(true);
    $c->addAscendingOrderByColumn(self::DISPLAY_NAME);

    return self::doSelect($c);
  }

} // MaterialTypePropertyPeer
?>
