<?php

  // include base peer class
  require_once 'lib/data/om/BaseEquipmentDocumentationPeer.php';

  // include object class
  include_once 'lib/data/EquipmentDocumentation.php';


/**
 * Skeleton subclass for performing query and update operations on the 'EquipmentDocumentation' table.
 *
 *
 *
 * This class was autogenerated by Propel on:
 *
 * Sat Feb  9 00:02:55 2008
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.data
 */
class EquipmentDocumentationPeer extends BaseEquipmentDocumentationPeer {

  /**
   * Find an EquipmentDocumentation object based on its ID
   *
   * @param int $id
   * @return EquipmentDocumentation
   */
  public static function find($id) {
    return self::retrieveByPK($id);
  }


  /**
   * Find all EquipmentDocumentations
   *
   * @return array <EquipmentDocumentation>
   */
  public static function findAll() {
    return self::doSelect(new Criteria());
  }


  //case "findByEquipment":
  //return new Finder($finderName, "SELECT * FROM EquipmentDocumentation WHERE equipmentId=?");
  public static function findByEquipment($equipmentId) {
    $c = new Criteria();
    $c->add(self::EQUIPMENT_ID, $equipmentId);

    return self::doSelect($c);
  }


  //case "findByAttributeValue":
  //return new Finder($finderName, "SELECT * FROM EquipmentDocumentation WHERE description=?");
  public static function findByAttributeValue($description) {
    $c = new Criteria();
    $c->add(self::DESCRIPTION, $description);

    return self::doSelect($c);
  }


  //case "findByDataFile":
  //return new Finder($finderName, "SELECT * FROM EquipmentDocumentation WHERE documentationFile_Id=?");
  public static function findByDataFile($documentationFile_Id) {
    $c = new Criteria();
    $c->add(self::DOCUMENTATION_FILE_ID, $documentationFile_Id);

    return self::doSelect($c);
  }








} // EquipmentDocumentationPeer
?>
