<?php

  // include base peer class
  require_once 'lib/data/om/BaseSensorSensorManifestPeer.php';

  // include object class
  include_once 'lib/data/SensorSensorManifest.php';


/**
 * Skeleton subclass for performing query and update operations on the 'SensorSensorManifest' table.
 *
 *
 *
 * This class was autogenerated by Propel on:
 *
 * Sat Feb  9 00:03:09 2008
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.data
 */
class SensorSensorManifestPeer extends BaseSensorSensorManifestPeer {

  /**
   * Find a SensorSensorManifest object based on its ID
   *
   * @param int $id
   * @return SensorSensorManifest
   */
  public static function find($id) {
    return self::retrieveByPK($id);
  }


  /**
   * Find all SensorSensorManifests
   *
   * @return array <SensorSensorManifest>
   */
  public static function findAll() {
    return self::doSelect(new Criteria());
  }


  /**
   * Find one SensorSensorManifest by SensorId
   *
   * @param int $sensorId
   * @return SensorSensorManifest
   */
  public static function findBySensor($sensorId) {

    $c = new Criteria();
    $c->add(self::SENSOR_ID, $sensorId);

    return self::doSelectOne($c);
  }


  //case "findByManifest":
  //return new Finder($finderName, "SELECT * FROM {$this->getTable()} WHERE manifestId=?");
  public static function findByManifest($manifestId) {

    $c = new Criteria();
    $c->add(self::MANIFEST_ID, $manifestId);

    return self::doSelect($c);
  }


} // SensorSensorManifestPeer
?>
