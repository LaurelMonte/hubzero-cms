<?php

// include base peer class
require_once 'lib/data/om/BaseEquipmentAttributePeer.php';

// include object class
include_once 'lib/data/EquipmentAttribute.php';


/**
 * Skeleton subclass for performing query and update operations on the 'EquipmentAttribute' table.
 *
 *
 *
 * This class was autogenerated by Propel on:
 *
 * Sat Feb  9 00:02:54 2008
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.data
 */
class EquipmentAttributePeer extends BaseEquipmentAttributePeer {

  /**
   * Find an EquipmentAttribute object based on its ID
   *
   * @param int $id
   * @return EquipmentAttribute
   */
  public static function find($id) {
    return self::retrieveByPK($id);
  }


  /**
   * Find all EquipmentAttributes
   *
   * @return array <EquipmentAttribute>
   */
  public static function findAll() {
    return self::doSelect(new Criteria());
  }


  /**
   * Find all EquipmentAttribute by its Parent ID
   *
   * @param int  $parentId
   * @return EquipmentAttribute
   */
  public static function findByParent($parentId) {
    $c = new Criteria();
    $c->add(self::PARENT_ID, $parentId);

    return self::doSelect($c);
  }


  /**
   * Find the list of Group Values given by Attribute Name and Equipment ID
   *
   * @param String $attr_name
   * @param int $id
   * @return array
   */
  public static function findGroupValues($attr_name, $id){
    $sql="
        SELECT ega.*, ea.*, u.symbol FROM Equipment_Grouped_Attribute ega
          JOIN Equipment_Attribute ea ON ega.attribute_id=ea.id
          JOIN Unit u ON ega.unit_id=u.unit_id
        WHERE g_attribute_id IN (
          SELECT g_attribute_id FROM Equipment_Grouped_Attr_Map
            WHERE attribute_id IN (SELECT id FROM Equipment_Attribute WHERE name=?) AND equipment_id=?)
        ORDER BY ega.g_attribute_id, ea.label";

    $conn = Propel::getConnection(self::DATABASE_NAME);
    $stmt = $conn->prepareStatement($sql);
    $stmt->setString(1, $attr_name);
    $stmt->setInt(2, $id);
    $rs = $stmt->executeQuery();

    $array = array();
    $i=0;
    $labels =array();
    $break = "";


    while($resultArray = $rs->next()) {
      if($resultArray['dataType'] == "STRING"){
        $val = $resultArray['string_value'];
      }
      else{
        $val = $resultArray['num_value'];
      }

      $unit = $resultArray['symbol'];
      $gid = $resultArray['g_attribute_id'];
      $aid = $resultArray['attribute_id'];

      if(array_key_exists($resultArray['label'], $labels) && $labels[$resultArray['label']] ==0) {
        $break = "<br/>";
      }
      else{
        $labels = $labels + array($resultArray['label'] => $i );
      }

      if(!empty($val)) {
        $array[$i . ": " . $gid . ": ". $aid] = $break . $resultArray['label'] . ": " . $val. "  ". $unit;
        $i++;
      }

      $break = "";
    }

    return $array;
  }


  //$sql="select dataType from EquipmentAttribute WHERE id =?";
  /**
   * Update Group Attribute given by Attribute ID, Group Attribute ID, and string/num value
   *
   * @param int $attrid
   * @param int $gattrid
   * @param mix $value
   */
  public static function updateGroupAttribute($attrid, $gattrid, $value){

    $equipAttObj = self::retrieveByPK($attrid);
    if(! $equipAttObj) return;

    $datatype = $equipAttObj->getDataType();

    if($datatype == "STRING"){
       $val = 'string_value';
    }else{
      $val = 'num_value';
    }

    $sql = "update Equipment_Grouped_Attribute set ". $val . " = ? WHERE  g_attribute_id = ? AND attribute_id=? ";

    $conn = Propel::getConnection(self::DATABASE_NAME);
    $stmt = $conn->prepareStatement($sql);
    $stmt->set(1, $value);
    $stmt->setInt(2, $gattrid);
    $stmt->setInt(3, $attrid);
    $stmt->executeUpdate();
  }

} // EquipmentAttributePeer
?>
