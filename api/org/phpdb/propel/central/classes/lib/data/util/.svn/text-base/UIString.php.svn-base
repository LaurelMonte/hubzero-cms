<?php

require_once 'lib/data/util/om/BaseUIString.php';


/**
 * Skeleton subclass for representing a row from the 'UIString' table.
 *
 *
 *
 * This class was autogenerated by Propel on:
 *
 * Sat Feb  9 00:03:17 2008
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.data
 */
class UIString extends BaseUIString {

  /**
   * Constructs a new UIString object
   */
  public function __construct()
  {

  }

  /**
   * Return the Web-Services URL that this instance is accessible at
   *
   * @return String RESTURI
   */
  function getRESTURI() {
    return "/UIString/{$this->getId()}";
  }


  //"insert into UIString (tkey, value, type) Values (?, ?, ?)", array($key, $value, $type));
  function addString($key, $value, $type=null) {

    $tkey = UISstringPeer::findByKey($key);
    if($tkey) return false;
    else {
      $tkey = new UISstring($key, $value, $type);
      $tkey->save();
    }
  }

  //select value from UIString where tkey=?
  function getString($key) {
    $tkey = UISstringPeer::findByKey($key);

    if($tkey && $tkey->getValue()) return trim($tkey->getValue());
    else return false;

  }


  /**
   * "update UIString set value=?, type=? where tkey=?", array($value, $type,$key));
   * @deprecated
   */
  function updateString($key, $value, $type=null) {
    $tkey = UISstringPeer::findByKey($key);
    if($tkey) {
      $tkey->setValue($value);
      $tkey->setType($type);
      $tkey->save();
    }
  }

  /**
   * @deprecated
   */
  function deleteString($key){
    $tkey = UISstringPeer::findByKey($key);
    if($tkey) {
      $tkey->delete();
    }
  }

  /**
   * @todo move to Peer
   */
  static function getStringByTablename($tablename){

    $uistringObjs = UIStringPeer::findByTable($tablename);
    $result = array();

    //id, tkey, value, type
    foreach($uistringObjs as $uistring) {
      $result[$uistring->getTkey()] = $uistring->getValue();
    }

    $uistrings = array();

    foreach ($result as $key => $v){
      list($n, $k) = explode(".", $key);
      $uistrings[$k] = trim($v);
    }
    return $uistrings;
  }


} // UIString
?>
