<?php

  // include base peer class
  require_once 'lib/data/om/BaseNAWIPeer.php';

  // include object class
  include_once 'lib/data/NAWI.php';


/**
 * Skeleton subclass for performing query and update operations on the 'NAWI' table.
 *
 *
 *
 * This class was autogenerated by Propel on:
 *
 * Sat Feb  9 00:03:04 2008
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.data
 */
class NAWIPeer extends BaseNAWIPeer {

  /**
   * Find a NAWI object based on its ID
   *
   * @param int $id
   * @return NAWI
   */
  public static function find($id) {
    return self::retrieveByPK($id);
  }



  /**
   * Find a list of all NAWI objects
   *
   * @return array <NAWI>
   */
  public static function findAll() {
    return self::doSelect(new Criteria());
  }


  /**
   * UPDATE
   *    NAWI
   * SET
   *    exp_name = '$expName',
   *    exp_descript = '$expDesc',
   *    exp_phase = '$expPhase',
   *    test_dt = '$testDt',
   *    test_start = '$testStart',
   *    test_end = '$testEnd',
   *    test_tz = '$testTz',
   *    contact_name = '$cName',
   *    contact_email = '$cEmail',
   *    movie_url = '$mURL',
   *    active = $expAct
   * WHERE
   *    nawiid = '$nid'";
   *
   * @param int $nawiid
   * @param String $exp_name
   * @param String $exp_descript
   * @param String $exp_phase
   * @param DateTime $test_dt
   * @param Date $test_start
   * @param Date $test_end
   * @param String $test_tz
   * @param String $contact_name
   * @param String $contact_email
   * @param String $movie_url
   * @param int $active
   */
  public static function update_NAWI_exp($nawiid, $exp_name, $exp_descript, $exp_phase, $test_dt, $test_start, $test_end, $test_tz, $contact_name, $contact_email, $movie_url, $active) {

    if(empty($test_dt)) $test_dt = null;
    if(empty($test_start)) $test_start = null;
    if(empty($test_end)) $test_end = null;

    // select from...
    $c1 = new Criteria();
    $c1->add(self::NAWIID, $nawiid);

    // update set
    $c2 = new Criteria();
    $c2->add(self::EXP_NAME , $exp_name);
    $c2->add(self::EXP_DESCRIPT, $exp_descript);
    $c2->add(self::EXP_PHASE, $exp_phase);
    $c2->add(self::TEST_DT, $test_dt);
    $c2->add(self::TEST_START, $test_start);
    $c2->add(self::TEST_END, $test_end);
    $c2->add(self::TEST_TZ, $test_tz);
    $c2->add(self::CONTACT_NAME, $contact_name);
    $c2->add(self::CONTACT_EMAIL, $contact_email);
    $c2->add(self::MOVIE_URL, $movie_url);
    $c2->add(self::ACTIVE, $active);

    BasePeer::doUpdate($c1, $c2, Propel::getConnection(self::DATABASE_NAME));
  }


  /**
   * UPDATE
   *    NAWI
   * SET
   *    exp_phase = '$expPhase',
   *    test_dt = '$testDt',
   *    active = $expAct
   * WHERE
   *    nawiid = '$nid'";
   *
   * @param int $nawiid
   * @param String $exp_phase
   * @param DateTime $test_dt
   * @param int $active
   */
  public static function update_NAWI_multi($nawiid, $exp_phase, $test_dt, $active) {

    if(empty($test_dt)) $test_dt = null;

    // select from...
    $c1 = new Criteria();
    $c1->add(self::NAWIID, $nawiid);

    // update set
    $c2 = new Criteria();
    $c2->add(self::EXP_PHASE, $exp_phase);
    $c2->add(self::TEST_DT, $test_dt);
    $c2->add(self::ACTIVE, $active);

    BasePeer::doUpdate($c1, $c2, Propel::getConnection(self::DATABASE_NAME));
  }

//execSQL("UPDATE NAWI SET exp_phase = '$expPhase', test_dt = '$testDt', active = '$active' where nawiid = $nid");
} // NAWIPeer
?>
