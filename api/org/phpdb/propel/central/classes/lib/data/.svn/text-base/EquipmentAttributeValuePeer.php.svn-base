<?php

  // include base peer class
  require_once 'lib/data/om/BaseEquipmentAttributeValuePeer.php';

  // include object class
  include_once 'lib/data/EquipmentAttributeValue.php';


/**
 * Skeleton subclass for performing query and update operations on the 'EquipmentAttributeValue' table.
 *
 *
 *
 * This class was autogenerated by Propel on:
 *
 * Sat Feb  9 00:02:55 2008
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.data
 */
class EquipmentAttributeValuePeer extends BaseEquipmentAttributeValuePeer {

  /**
   * Find a EquipmentAttributeValue object based on its ID
   *
   * @param int $id
   * @return EquipmentAttributeValue
   */
  public static function find($id) {
    return self::retrieveByPK($id);
  }


  /**
   * Find all EquipmentAttributeValues
   *
   * @return array <EquipmentAttributeValue>
   */
  public static function findAll() {
    return self::doSelect(new Criteria());
  }


  /**
   * Find all EquipmentAttributeValue given by Equipment ID
   *
   * @param int $equipmentId
   * @return array <EquipmentAttributeValue>
   */
  public static function findByEquipment($equipmentId) {
    $c = new Criteria();
    $c->add(self::EQUIPMENT_ID, $equipmentId);

    return self::doSelect($c);
  }


  /**
   * Find one EquipmentAttributeValue given by Equipment ID, EquipmentAttribute ID, EquipmentAttributeClass ID
   *
   * @param int $equipmentId
   * @param int $equipmentAttributeId
   * @param int $equipmentAttributeClassId
   * @return EquipmentAttributeValue
   */
  public static function findByEquipmentAndAttributeAndClass($equipmentId, $equipmentAttributeId, $equipmentAttributeClassId) {
    $c = new Criteria();
    $c->add(self::EQUIPMENT_ID, $equipmentId);
    $c->add(self::EQUIPMENT_ATTRIBUTE_ID, $equipmentAttributeId);
    $c->add(self::EQUIPMENT_ATTRIBUTE_CLASS_ID, $equipmentAttributeClassId);

    return self::doSelectOne($c);
  }



  /**
   * Find EquipmentAttributeValue Object by a given EquipmentID and EquipmentAttribute Name
   * SELECT * FROM Equipment_Attribute_Value v, Equipment_Attribute a WHERE v.equipment_Id=? AND v.equipment_Attribute_Id = a.id AND a.name = ?
   * @param int $equipmentAttributeId
   * @param String $name
   * @return EquipmentAttributeValue Object
   */
  public static function findByEquipmentAndAttributeName($equipmentId, $name) {

    include_once 'lib/data/EquipmentAttribute.php';

    $c = new Criteria();
    $c->addJoin(self::EQUIPMENT_ATTRIBUTE_ID, EquipmentAttributePeer::ID);
    $c->add(self::EQUIPMENT_ID, $equipmentId);
    $c->add(EquipmentAttributePeer::NAME, $name);

    return self::doSelect($c);
  }

} // EquipmentAttributeValuePeer
?>
